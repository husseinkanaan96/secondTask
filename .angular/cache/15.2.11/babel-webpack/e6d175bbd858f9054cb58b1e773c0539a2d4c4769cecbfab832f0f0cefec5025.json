{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppStatusService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/report';\n  }\n  getReport(applicationNo) {\n    let params = new HttpParams();\n    if (applicationNo) {\n      params = params.set('applicationNo', applicationNo);\n    }\n    return this.http.get(this.apiUrl, {\n      params\n    });\n  }\n  static #_ = this.ɵfac = function AppStatusService_Factory(t) {\n    return new (t || AppStatusService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppStatusService,\n    factory: AppStatusService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAM7D,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,kCAAkC;EAEZ;EAEvCC,SAAS,CAACC,aAAqB;IAC7B,IAAIC,MAAM,GAAG,IAAIN,UAAU,EAAE;IAC7B,IAAIK,aAAa,EAAE;MACjBC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,eAAe,EAAEF,aAAa,CAAC;;IAGrD,OAAO,IAAI,CAACF,IAAI,CAACK,GAAG,CAAQ,IAAI,CAACC,MAAM,EAAE;MAAEH;IAAM,CAAE,CAAC;EACtD;EAAC;qBAbUL,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAS,SAAhBT,gBAAgB;IAAAU,YAFf;EAAM","names":["HttpParams","AppStatusService","constructor","http","getReport","applicationNo","params","set","get","apiUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\OneDrive Backup\\OneDrive\\Desktop\\secondTask\\src\\app-status.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppStatusService {\n\n  private apiUrl = 'http://localhost:3000/api/report';\n\n  constructor(private http: HttpClient) {}\n\n  getReport(applicationNo: string): Observable<any[]> {\n    let params = new HttpParams();\n    if (applicationNo) {\n      params = params.set('applicationNo', applicationNo);\n    }\n    \n    return this.http.get<any[]>(this.apiUrl, { params });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}